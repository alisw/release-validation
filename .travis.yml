dist: trusty
language: python
python:
  - "2.7"
  - "3.5"
install:
  - pip install jinja2
  - pip install codecov
cache:
  directories:
    - $HOME/cctools
script: |
  set -e
  # Install cctools (cache installation)
  export PATH="$HOME/cctools/bin:$PATH"
  export LD_LIBRARY_PATH="$HOME/cctools/lib:$LD_LIBRARY_PATH"
  if [[ ! -e $HOME/cctools/bin/makeflow ]]; then
    pushd /tmp
      curl -L http://ccl.cse.nd.edu/software/files/cctools-6.2.9-source.tar.gz | tar xzf -
      cd cctools-*-source/
      ./configure --prefix=$HOME/cctools && make -j4 && make install
    popd
  fi
  type makeflow
  # Actual test
  COV_REPORTS=
  pushd examples/
    for DIR in *; do
      [[ -d $DIR ]] || continue
      pushd $DIR/
        echo ">> Testing JDL under $DIR"
        echo "dummy eos-proxy" > eos-proxy
        echo 'EnvironmentCommand = "/bin/true";' >> ${DIR}_override.jdl
        coverage run -a ../../jdl2makeflow --summary $DIR.jdl
        coverage run -a ../../jdl2makeflow --parse-only $DIR.jdl
        coverage run -a ../../jdl2makeflow --remove --force --parse $DIR.jdl
        touch work/dummy.done work/dummy.makeflowlog
        START_AT=
        STOP_AT=
        WRONG_START_STOP=
        if [[ $DIR == reco ]]; then
          # Create fake input files (needed for input box)
          mkdir dummy
          echo dummy file > dummy/file
          tar cjf dummy.tar.bz2 dummy/
          mkdir -p /tmp/relval/reco/alice/data/2017/LHC17r/000252858/cpass0_pass1/OCDB
          cp dummy.tar.bz2 /tmp/relval/reco/alice/data/2017/LHC17r/000252858/cpass0_pass1/OCDB/OCDB.tar.bz2
          mkdir -p /tmp/relval/reco/alice/data/2017/LHC17r/000252858/cpass0_pass1/ResidualMerge/TPCSPCalibration/CorrectionMaps
          cp dummy.tar.bz2 /tmp/relval/reco/alice/data/2017/LHC17r/000252858/cpass0_pass1/ResidualMerge/TPCSPCalibration/CorrectionMaps/OCDB_SPC.tar.bz2
          START_AT=ppassQaPlots
          STOP_AT=mergeValidationReportsReco
          WRONG_START_STOP=('--start-at cpass1Merge --stop-at cpass0'
                            '--start-at simQaPlots'
                            '--stop-at simQaMerge')
        elif [[ $DIR == gpmc ]]; then
          START_AT=simQaPlots
          STOP_AT=mergeValidationReportsMC
          WRONG_START_STOP=('--start-at simQaPlots --stop-at sim'
                            '--start-at cpass0Merge'
                            '--stop-at cpass1')
        fi
        if [[ $START_AT ]]; then
          coverage run -a ../../jdl2makeflow --force --start-at $START_AT --stop-at $STOP_AT --run --dryrun $DIR.jdl
          for W in "${WRONG_START_STOP[@]}"; do
            echo "Testing wrong arguments: $W"
            ERR=0
            coverage run -a ../../jdl2makeflow --remove $W $DIR.jdl || ERR=$?
            [[ $ERR == 1 ]] || { echo "Should have failed with 1 but it exited with $ERR"; exit 1; }
          done
        fi
        coverage xml
        COV_REPORTS="$COV_REPORTS $PWD/coverage.xml"
      popd
    done
  popd
  echo ">> Listing current directory - $PWD"
  find . -type f -ls
  echo ">> Uploading codecov reports"
  codecov --file $COV_REPORTS --root $PWD
